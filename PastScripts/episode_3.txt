A1 - Intro

{GARY}
Welcome to the Mixer Dev Show - the show where us developers jam out to the latest and greatest of developing for Mixer.

{MIKE}
That's right! Whether you're a game developer, web developer, or not a developer at all this is the show to learn about how you can build awesome interactions into streams and games on Mixer. I'm Mike, and today I am excited to be joined by the infamous Gary W!

{riff on Gary's intro}

{GARY}
Every week the dev show showcases the latest in the world of Mixer developers.

{MIKE}
But that's not all. Every week we'll bring new tutorials and samples to help you get the most out of Mixer and interactive

{GARY}
And we'll always be working in little secrets and pro tips directly from the developers to help you up your skills

{MIKE}
And all of you watching live will have the opportunity to help shape our show and our samples, plus ask questions directly to the Mixer team. You can also tweet at us with the hashtag #MixerDevShow to talk about content, tips, or samples that you'd like to see in the show.

{GARY}
And if you're a developer and you're adding interactive to your game, tool, or something completely different be sure to drop us a line and we might just feature you on the show!

{MIKE}
We have alot to cover today, starting by finishing up the Tanks sample we started last week.

{GARY}
After that we're going to check out a MixPlay game that makes use of custom controls to build a unique multiplayer experience on Mixer. After that we're going to dive into a sample of how you can build a stream tool with custom controls.

{MIKE}
But before we get to that we want to know more about YOU! As we go into the next segment our awesome producer Tabz is going to pop up a poll where we've got a handful of questions to learn more about who's watching. It's multiple choice so just pick the option that you feel best represents you. If you don't see a great option for yourself then let us know in chat!

{GARY}
We're going to run this survey every week to understand who's out there, and use that to help pick better and more interesting samples for YOU, our favorite developers.

{MIKE}
With that, let's dive into our tanks sample.

A2 - Opening Poll

Sample Questions:
How would you describe yourself?
    - Hobbyist game developer
    - Professional game developer
    - Hobbyist web developer
    - Professional web developer
    - Interested in development
    - Just a fan of Mixer

Have you developed for Mixer before?
    - Yes
    - No

What are you most interested in learning about?
    - Building tools
    - Building games
    - Something else?

What language or environment do you have the most experience with?
    - Javascript
    - Unity
    - Unreal
    - Other

A5 - Tanks, Pt 2

(Segment Header: Tanks, Part 2)

{GARY}
Last week we started out on a game based off of Unity's "Tanks" sample. The base game was a couch-co-op style game, but we added the ability for multiplayer play through Mixer.

{MIKE}
Every viewer who connects to the game gets their own tank to control - with the last person alive winning!

{GARY} 
So basically, we made the first made-for-Mixer tank battle royale.

{MIKE}
Exactly, and this week we're going to finish it up by adding some viewer attribution components. Before we do that though, let's start by running what we have today. And as a quick note you can see how we got here by going to dev.mixer.com and going to the dev show area where we post recordings of all of our shows.

(Switch to Gary's PC)

{GARY}
Let's run the sample

(Run Sample - Mike plays)

As you can see Mike is able to control his tank within the game using his keyboard, and fire the tank. You'll notice however that it's hard to tell which of the tanks belongs to Mike, and if he were to win you wouldn't know who it was -so let's fix that!

(Hosts go off-script)

{MIKE}
And there we have it - we can now clearly see who is controlling each of the tanks. Again, viewer attribution in an interactive game is extremely important. By including viewers fully in the game you make it a more fun and compelling experience, especially when they're interacting with their favorite streamer.

{GARY}
That's right - but do you know what else is fun? Playing massive multiplayer games. Before we get into our next sample, we're going to be looking at game that does just that.

 - Custom Controls Sample

(Segment Header: Custom Controls Sample)

{MIKE}
Today we're going to be walking you through how to build a custom control, which is a MixPlay project that allows you to build fully custom UI that runs on Mixer. But first, we're going to be showing a sample of a game made with custom controls and Unreal engine to give you a sample of what you can achieve on Mixer.

(Play MixOgre_GamePlay.mp4)

{GARY}
This project, codename MixOgre, pits participants against a massive city-destroying monster.  Viewers can choose between two different teams within the game and have to work together in order to defeat the monster.

{MIKE}
That's right. In the recon team, which is the default, viewers need to use their array of probes in order to expose weaknesses on the monster by timing their probes to hit invisible energy pulses travelling through the monsters body - and only visible through custom controls.

{GARY}
The second team is the artillery team. Once the recon team has created a weak spot the artillery team is able to attack it and inflict massive amounts of damage using their missiles in order to take the monster down.

{MIKE}
Now there's a lot of really cool stuff in this game but I wanted to point out a few things. Tabz can we bring up a picture of the Recon team?

(Show MixOgre_Recon_Team.jpg)

{MIKE}
So the first thing to note is that you can only play this game on Mixer - you can't download a copy and connect to someone else on your LAN or anything like that. So that means that all interactions are through custom controls. Everything you see here that's not the monster or the city is actually being rendered on the viewers device.

{GARY}
Right, so each individual viewer gets their own unique perspective and game UI, despite the fact that they're playing on the same stream. The other thing this game does really well is viewer attribution, like we talked about in our tanks sample earlier. On the right hand side you can see a leaderboard, although it's empty right now.

(Show MixOgre_Artillery_Team.jpg)

Switching to the recon team view you can also see the other cool thing you can do with custom controls - interact directly on the video. In this case, the game actually lets viewers click wherever on the video they want to drop one of their missiles and a few moments later a missile lands on that spot in-game.

(Switch back to hosts)

{MIKE}
Yea that's really great. Now I could talk about the awesome things that the developer, Wahoo, did in this game, but why don't we get to talking about how are viewers at home can build their own custom controls in our next segment?

{GARY}
Sounds good to me.

 - Custom Controls Tutorial

(Segment Header: Custom Controls Tutorial)

{GARY}
In today's sample we're going to be giving you a demonstration of the capabilities of custom controls. This week we're going to move pretty fast and hopefully whet your appetite for a deeper dive on the technologies, capabilities, and all the ins and outs of building a custom control next week. Mike - could you walk us through what we're going to build today?

{MIKE}
Absolutely. Many of our viewers are probably familiar with Tamagotchi's - they were all the rage when I was a kid. Basically they were these keychain pet games where you had to take care of a little pet who would need feeding, play, and other activities. Today we're going to be building a really simple "Stream Pet" custom control where each viewer will get their own little pet on the stream and we'll have a leaderboard of the person taking the best care of theirs. But before we start coding, let's talk about our game plan.

{GARY}
Okay, the first thing to point out is that custom controls are built on top of MixPlay, so just like with the tanks game earlier we need to have a game client running on the streamers computer and that's the thing that runs the whole experience.

{MIKE}
Right, so we'll start off our sample by writing the game client that manages every persons pet. After that we'll go and build the UI which is the custom control. Now for anyone at home that's not familiar with custom controls, they are written in HTML, Javascript, and CSS - basically the same technologies you use to write a web page can be used inside a custom control. They're rendered on Mixer over the video and can even interact with the video in some cool ways.

{GARY}
So basically, Step 1 is to write the game client that handles the game loop and the state of everyones pet and runs on the streamers computer, and Step 2 is to write the actual control that runs in the viewers browser.

{MIKE}
Exactly.

{GARY}
Alright, let's get to it then.

(Hosts go off script)

A6 - Outro

Thanks for tuning into another segment of the Mixer Dev Show.  Be sure to tune in every Wednesday at 1pm PT / 4pm ET for more info like this every week.

If you want to get more information about what we showed here today, you can check out the vods here on Mixer, read more on our BRAND NEW DEV SITE , or visit our youtube channel at WatchMixer.

While you're at it, why not go ahead and get started building some experiences of your own by visiting the Mixer Dev Lab at .

And be sure to tune in next week where we're going to be taking our first Mixer Dev Show look at custom controls.

And of course, follow Mixer on all the socials at @WatchMixer and more dev goodness with #MixerDevShow, and if you haven't already be sure that you've clicked that blue follow button right below the stream.

{riff on whatever}

 

As always to end our show, we'll be promoting the amazing content that's already out there and we'll continue this week with supporting the documentary series "Dev Quest", a four part series taking a look at developers around the world and the things that they build. We'll preview the first 2 minutes of the second episode, so you'll have to go over to the "Windows Developer" channel on youtube to keep watching on the "Dev Quest" playlist. 

That's all from us! Good day and Happy coding!

